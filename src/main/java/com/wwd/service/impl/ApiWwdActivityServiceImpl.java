package com.wwd.service.impl;

import com.github.pagehelper.Page;
import com.wwd.service.modules.wwd.api.ApiWwdActivityService;
import com.wwd.service.modules.wwd.dto.SearchWwdActivitysConditionDto;
import com.wwd.service.modules.wwd.dto.WwdActivityDto;
import com.wwd.service.modules.wwd.po.WwdActivity;
import feihua.jdbc.api.pojo.PageAndOrderbyParamDto;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author revolver 2019-03-14 11:39:01
 */
@Service
public class ApiWwdActivityServiceImpl extends ApiBaseServiceImpl<WwdActivity, WwdActivityDto, String> implements ApiWwdActivityService {
    @Autowired
    com.wwd.service.mapper.WwdActivityMapper WwdActivityMapper;

    public ApiWwdActivityServiceImpl() {
        super(WwdActivityDto.class);
    }

    @Override
    public PageResultDto<WwdActivityDto> searchWwdActivitysDsf(com.wwd.service.modules.wwd.dto.SearchWwdActivitysConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.wwd.service.modules.wwd.dto.WwdActivityDto> list = this.wrapDtos(WwdActivityMapper.searchWwdActivitys(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public PageResultDto<WwdActivityDto> myActivitysMultiTable(SearchWwdActivitysConditionDto dto, PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.wwd.service.modules.wwd.dto.WwdActivityDto> list = this.wrapDtos(WwdActivityMapper.myActivitysMultiTable(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public WwdActivityDto wrapDto(WwdActivity po) {
        if (po == null) { return null; }
        WwdActivityDto dto = new WwdActivityDto();
        dto.setId(po.getId());
        dto.setTitle(po.getTitle());
        dto.setTitleUrl(po.getTitleUrl());
        dto.setAuthor(po.getAuthor());
        dto.setStartTime(po.getStartTime());
        dto.setEndTime(po.getEndTime());
        dto.setAddr(po.getAddr());
        dto.setContact(po.getContact());
        dto.setSequence(po.getSequence());
        dto.setType(po.getType());
        dto.setStatus(po.getStatus());
        dto.setRequireIdCard(po.getRequireIdCard());
        dto.setHeadcount(po.getHeadcount());
        dto.setHeadcountRule(po.getHeadcountRule());
        dto.setHeadcountMale(po.getHeadcountMale());
        dto.setHeadcountFemale(po.getHeadcountFemale());
        dto.setHeadcountDesc(po.getHeadcountDesc());
        dto.setIntroduced(po.getIntroduced());
        dto.setMalePrice(po.getMalePrice());
        dto.setFemalePrice(po.getFemalePrice());
        dto.setActivityStatement(po.getActivityStatement());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        dto.setCreateAt(po.getCreateAt());
        dto.setContent(po.getContent());
        dto.setPayType(po.getPayType());
        dto.setMutualElectionStatus(po.getMutualElectionStatus());
        dto.setManageUserGroupId(po.getManageUserGroupId());
        return dto;
    }
}