package com.wwd.service.impl;

import com.github.pagehelper.Page;
import com.wwd.service.modules.wwd.api.ApiWwdBannerService;
import com.wwd.service.modules.wwd.dto.WwdBannerDto;
import com.wwd.service.modules.wwd.po.WwdBanner;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-11-06 09:49:13
 */
@Service
public class ApiWwdBannerServiceImpl extends ApiBaseServiceImpl<WwdBanner, WwdBannerDto, String> implements ApiWwdBannerService {
    @Autowired
    com.wwd.service.mapper.WwdBannerMapper WwdBannerMapper;

    public ApiWwdBannerServiceImpl() {
        super(WwdBannerDto.class);
    }

    @Override
    public PageResultDto<WwdBannerDto> searchWwdBannersDsf(com.wwd.service.modules.wwd.dto.SearchWwdBannersConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.wwd.service.modules.wwd.dto.WwdBannerDto> list = this.wrapDtos(WwdBannerMapper.searchWwdBanners(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public WwdBannerDto wrapDto(WwdBanner po) {
        if (po == null) { return null; }
        WwdBannerDto dto = new WwdBannerDto();
        dto.setId(po.getId());
        dto.setTitle(po.getTitle());
        dto.setTitleUrl(po.getTitleUrl());
        dto.setRedirectUrl(po.getRedirectUrl());
        dto.setType(po.getType());
        dto.setStatus(po.getStatus());
        dto.setDescp(po.getDescp());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        dto.setCreateAt(po.getCreateAt());
        return dto;
    }
}