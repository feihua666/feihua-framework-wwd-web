package com.wwd.service.impl;

import com.wwd.service.mapper.WwdUserPoMapper;
import com.wwd.service.modules.wwd.api.ApiWwdUserPoService;
import com.wwd.service.modules.wwd.dto.SearchWwdUsersConditionDto;
import com.wwd.service.modules.wwd.dto.WwdUserDto;
import com.wwd.service.modules.wwd.dto.WwdUserPageDto;
import com.wwd.service.modules.wwd.po.WwdUserPo;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.pojo.PageAndOrderbyParamDto;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-04-25 11:35:15
 */
@Service
public class ApiWwdUserPoServiceImpl extends ApiBaseServiceImpl<WwdUserPo, WwdUserDto, String> implements ApiWwdUserPoService {
    @Autowired
    WwdUserPoMapper wwdUserPoMapper;

    public ApiWwdUserPoServiceImpl() {
        super(WwdUserDto.class);
    }
    @Transactional( propagation = Propagation.SUPPORTS, readOnly = true )
    @Override
    public PageResultDto<WwdUserDto> searchWwdUsersDsf(SearchWwdUsersConditionDto dto, PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.wwd.service.modules.wwd.dto.WwdUserDto> list = this.wrapDtos(wwdUserPoMapper.searchWwdUsersDsf(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }
    @Transactional( propagation = Propagation.SUPPORTS, readOnly = true )
    @Override
    public PageResultDto<WwdUserPageDto> searchWwdUsersDsfMultiTable(SearchWwdUsersConditionDto dto, PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<WwdUserPageDto> list = wwdUserPoMapper.searchWwdUsersDsfMultiTable(dto);
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Transactional( propagation = Propagation.SUPPORTS, readOnly = true )
    @Override
    public WwdUserDto selectByUserId(String userId) {
        WwdUserPo wwdUserPo = new WwdUserPo();
        wwdUserPo.setUserId(userId);
        wwdUserPo.setDelFlag(BasePo.YesNo.N.name());
        return this.selectOne(wwdUserPo);
    }
    @Override
    public WwdUserDto wrapDto(WwdUserPo po) {
        if (po == null) {
            return null;
        }
        WwdUserDto wwdUserDto = new WwdUserDto();
        wwdUserDto.setName(po.getName());
        wwdUserDto.setMajor(po.getMajor());
        wwdUserDto.setCollege(po.getCollege());
        wwdUserDto.setLooks(po.getLooks());
        wwdUserDto.setBloodType(po.getBloodType());
        wwdUserDto.setNickname(po.getNickname());
        wwdUserDto.setAcademic(po.getAcademic());
        wwdUserDto.setGender(po.getGender());
        wwdUserDto.setId(po.getId());
        wwdUserDto.setMobile(po.getMobile());
        wwdUserDto.setSmoking(po.getSmoking());
        wwdUserDto.setShape(po.getShape());
        wwdUserDto.setDrinking(po.getDrinking());
        wwdUserDto.setHeight(po.getHeight());
        wwdUserDto.setHasHourse(po.getHasHourse());
        wwdUserDto.setYearSalary(po.getYearSalary());
        wwdUserDto.setProfession(po.getProfession());
        wwdUserDto.setDataType(po.getDataType());
        wwdUserDto.setUserId(po.getUserId());
        wwdUserDto.setWeight(po.getWeight());
        wwdUserDto.setHasCar(po.getHasCar());
        wwdUserDto.setIsverified(po.getIsverified());
        wwdUserDto.setDataUserId(po.getDataUserId());
        wwdUserDto.setStandard(po.getStandard());
        wwdUserDto.setDataAreaId(po.getDataAreaId());
        wwdUserDto.setEducation(po.getEducation());
        wwdUserDto.setCardNo(po.getCardNo());
        wwdUserDto.setUpdateAt(po.getUpdateAt());
        wwdUserDto.setConstellation(po.getConstellation());
        wwdUserDto.setMonthSalary(po.getMonthSalary());
        wwdUserDto.setDataOfficeId(po.getDataOfficeId());
        wwdUserDto.setDescription(po.getDescription());
        wwdUserDto.setWechatNumber(po.getWechatNumber());
        wwdUserDto.setMaritalStatus(po.getMaritalStatus());
        wwdUserDto.setBirthDay(po.getBirthDay());
        wwdUserDto.setShowInList(po.getShowInList());
        return wwdUserDto;
    }
}