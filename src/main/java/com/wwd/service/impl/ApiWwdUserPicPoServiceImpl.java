package com.wwd.service.impl;

import com.wwd.service.mapper.WwdUserPicPoMapper;
import com.wwd.service.modules.wwd.api.ApiWwdUserPicPoService;
import com.wwd.service.modules.wwd.dto.WwdUserPicDto;
import com.wwd.service.modules.wwd.po.WwdUserPicPo;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-04-25 11:24:56
 */
@Service
public class ApiWwdUserPicPoServiceImpl extends ApiBaseServiceImpl<WwdUserPicPo, WwdUserPicDto, String> implements ApiWwdUserPicPoService {
    @Autowired
    WwdUserPicPoMapper wwdUserPicPoMapper;

    public ApiWwdUserPicPoServiceImpl() {
        super(WwdUserPicDto.class);
    }

    @Override
    public List<WwdUserPicDto> selectByWwdUserId(String wwdUserId) {
        WwdUserPicPo wwdUserPicPo = new WwdUserPicPo();
        wwdUserPicPo.setWwdUserId(wwdUserId);
        wwdUserPicPo.setDelFlag(BasePo.YesNo.N.name());
        return this.selectList(wwdUserPicPo);
    }

    @Override
    public WwdUserPicDto wrapDto(WwdUserPicPo po) {
        if (po == null) {
            return null;
        }
        WwdUserPicDto wwdUserPicDto = new WwdUserPicDto();
        wwdUserPicDto.setType(po.getType());
        wwdUserPicDto.setDataAreaId(po.getDataAreaId());
        wwdUserPicDto.setWwdUserId(po.getWwdUserId());
        wwdUserPicDto.setDataType(po.getDataType());
        wwdUserPicDto.setSequence(po.getSequence());
        wwdUserPicDto.setDataUserId(po.getDataUserId());
        wwdUserPicDto.setUpdateAt(po.getUpdateAt());
        wwdUserPicDto.setId(po.getId());
        wwdUserPicDto.setPicOriginUrl(po.getPicOriginUrl());
        wwdUserPicDto.setDataOfficeId(po.getDataOfficeId());
        wwdUserPicDto.setPicThumbUrl(po.getPicThumbUrl());
        wwdUserPicDto.setDescribtion(po.getDescribtion());
        return wwdUserPicDto;
    }
}