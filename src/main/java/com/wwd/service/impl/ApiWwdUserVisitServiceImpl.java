package com.wwd.service.impl;

import com.github.pagehelper.Page;
import com.wwd.service.modules.wwd.api.ApiWwdUserVisitService;
import com.wwd.service.modules.wwd.dto.WwdUserVisitDto;
import com.wwd.service.modules.wwd.po.WwdUserVisit;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-06-17 13:29:29
 */
@Service
public class ApiWwdUserVisitServiceImpl extends ApiBaseServiceImpl<WwdUserVisit, WwdUserVisitDto, String> implements ApiWwdUserVisitService {
    @Autowired
    com.wwd.service.mapper.WwdUserVisitMapper WwdUserVisitMapper;

    public ApiWwdUserVisitServiceImpl() {
        super(WwdUserVisitDto.class);
    }

    @Override
    public PageResultDto<WwdUserVisitDto> searchWwdUserVisitsDsf(com.wwd.service.modules.wwd.dto.SearchWwdUserVisitsConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.wwd.service.modules.wwd.dto.WwdUserVisitDto> list = this.wrapDtos(WwdUserVisitMapper.searchWwdUserVisits(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public Map selectVisitCountByWwdUserId(String wwdUserId) {
        Map map = new HashMap();
        int nRead = WwdUserVisitMapper.selectVisitCountByWwdUserId(wwdUserId, BasePo.YesNo.N.name());
        int yRead = WwdUserVisitMapper.selectVisitCountByWwdUserId(wwdUserId, BasePo.YesNo.Y.name());
        map.put("nRead", nRead);
        map.put("yRead", yRead);
        return map;
    }

    @Override
    public WwdUserVisitDto wrapDto(WwdUserVisit po) {
        if (po == null) { return null; }
        WwdUserVisitDto dto = new WwdUserVisitDto();
        dto.setId(po.getId());
        dto.setWwdUserId(po.getWwdUserId());
        dto.setWwdUserName(po.getWwdUserName());
        dto.setWwdUserGender(po.getWwdUserGender());
        dto.setWwdUserPic(po.getWwdUserPic());
        dto.setVisitWwdUserId(po.getVisitWwdUserId());
        dto.setVisitWwdUserName(po.getVisitWwdUserName());
        dto.setVisitWwdUserGender(po.getVisitWwdUserGender());
        dto.setVisitWwdUserPic(po.getVisitWwdUserPic());
        dto.setVisitType(po.getVisitType());
        dto.setReadFlag(po.getReadFlag());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }
}